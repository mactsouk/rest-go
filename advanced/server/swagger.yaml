basePath: /
consumes:
- application/json
definitions:
  Input:
    description: Input defines the structure for the user issuing a command
    properties:
      admin:
        description: Is the User Admin or not
        format: int64
        type: integer
        x-go-name: Admin
      password:
        description: |-
          The Password of the User
          in: body
        type: string
        x-go-name: Password
      user:
        description: |-
          The Username of the User
          in: body
        type: string
        x-go-name: Username
    required:
    - user
    - password
    - admin
    type: object
    x-go-package: _/Users/mtsouk/docs/article/working/RESTp4.linode/shandler
  User:
    description: User defines the structure for a Full User Record
    properties:
      active:
        description: Is the User Logged In or Not
        format: int64
        type: integer
        x-go-name: Active
      admin:
        description: Is the User Admin or not
        format: int64
        type: integer
        x-go-name: Admin
      id:
        description: |-
          The ID for the User
          in: body
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      lastlogin:
        description: The Last Login time of the User
        format: int64
        minimum: 0
        type: integer
        x-go-name: LastLogin
      password:
        description: The Password of the User
        type: string
        x-go-name: Password
      user:
        description: |-
          The Username of the User
          in: body
        type: string
        x-go-name: Username
    required:
    - user
    - password
    - lastlogin
    - admin
    - active
    type: object
    x-go-package: _/Users/mtsouk/docs/article/working/RESTp4.linode/shandler
  UserPass:
    description: UserPass defines the structure for the user issuing a command
    properties:
      password:
        description: The Password of the User
        type: string
        x-go-name: Password
      user:
        description: The Username of the User
        type: string
        x-go-name: Username
    required:
    - user
    - password
    type: object
    x-go-package: _/Users/mtsouk/docs/article/working/RESTp4.linode/shandler
  V2Input:
    description: User defines the structure for the payload of V2 of the REST API
    properties:
      load:
        $ref: '#/definitions/User'
      password:
        description: The Password of the user issuing the command
        type: string
        x-go-name: Password
      username:
        description: The Username of the user issuing the command
        type: string
        x-go-name: Username
    required:
    - username
    - password
    type: object
    x-go-package: _/Users/mtsouk/docs/article/working/RESTp4.linode/shandler
info:
  description: Documentation for REST API
  title: For the Authentication Server
  version: 1.0.5
paths:
  /:
    delete:
      description: Default Handler for everything that is not a match
      operationId: EMPTY
      responses:
        "404":
          $ref: '#/responses/ErrorMessage'
      tags:
      - Anything
  /*:
    get:
      description: Default Handler for endpoints used with incorrect HTTP request method
      operationId: "NULL"
      responses:
        "404":
          $ref: '#/responses/ErrorMessage'
  /v1/add:
    post:
      description: Create a new user
      operationId: Input
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
      tags:
      - createUser
  /v1/getall:
    get:
      description: Get a list of all users
      operationId: Users
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/User'
        "400":
          $ref: '#/responses/BadRequest'
      tags:
      - UserPass
  /v1/getid:
    get:
      description: Create a new user
      operationId: UserPass
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
      tags:
      - Username-Password
  /v1/logged:
    get:
      description: Get a list of logged in users
      operationId: UserPass
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
  /v1/login:
    post:
      description: Create a new user
      operationId: UserPass
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
      tags:
      - Username-Password
  /v1/logout:
    post:
      description: Create a new user
      operationId: UserPass
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
  /v1/time:
    get:
      description: Return current time
      operationId: "NULL"
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
      tags:
      - time
  /v2/add:
    post:
      description: Create a new user
      operationId: V2Input
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
  /v2/files/{filename}:
    put:
      description: Upload a new file
      operationId: "NULL"
      responses:
        "200":
          $ref: '#/responses/OK'
        "404":
          $ref: '#/responses/BadRequest'
  /v2/getall:
    get:
      description: Get a list of all users
      operationId: Users
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/User'
        "400":
          $ref: '#/responses/BadRequest'
      tags:
      - V2Input
  /v2/login:
    post:
      description: Create a new user
      operationId: V2Input
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
  /v2/logout:
    post:
      description: Create a new user
      operationId: V2Input
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
produces:
- application/json
responses:
  BadRequest:
    description: Generic BadRequest message returned as an HTTP Status Code
  ErrorMessage:
    description: Generic error message returned as an HTTP Status Code
  OK:
    description: Generic OK message returned as an HTTP Status Code
schemes:
- http
swagger: "2.0"
